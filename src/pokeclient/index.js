/**
 * Pokecoin
 * The Pokecoin documentation
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddBlockBody from './model/AddBlockBody';
import AddBlockErrorResponse from './model/AddBlockErrorResponse';
import AddBlockResponse from './model/AddBlockResponse';
import BalanceResponse from './model/BalanceResponse';
import Block from './model/Block';
import BuyDefaultPackageSchemaResponse from './model/BuyDefaultPackageSchemaResponse';
import CardPack from './model/CardPack';
import CardResponse from './model/CardResponse';
import CardsResponse from './model/CardsResponse';
import ChangePasswordBody from './model/ChangePasswordBody';
import LoginBody from './model/LoginBody';
import LoginErrorResponse from './model/LoginErrorResponse';
import LoginResponse from './model/LoginResponse';
import Pokemoncard from './model/Pokemoncard';
import RegisterBody from './model/RegisterBody';
import RegisterErrorResponse from './model/RegisterErrorResponse';
import RegisterResponse from './model/RegisterResponse';
import TheAbilitySchema from './model/TheAbilitySchema';
import TheItemsSchema from './model/TheItemsSchema';
import TheItemsSchema1 from './model/TheItemsSchema1';
import Transaction from './model/Transaction';
import UnauthorizedError from './model/UnauthorizedError';
import UnexpectedError from './model/UnexpectedError';
import User from './model/User';
import UserCard from './model/UserCard';
import BlockchainApi from './api/BlockchainApi';
import CardsApi from './api/CardsApi';
import UsersApi from './api/UsersApi';
import ViewsApi from './api/ViewsApi';
import WalletApi from './api/WalletApi';


/**
* The_Pokecoin_documentation.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Pokecoin = require('index'); // See note below*.
* var xxxSvc = new Pokecoin.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Pokecoin.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Pokecoin.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Pokecoin.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.4.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddBlockBody model constructor.
     * @property {module:model/AddBlockBody}
     */
    AddBlockBody,

    /**
     * The AddBlockErrorResponse model constructor.
     * @property {module:model/AddBlockErrorResponse}
     */
    AddBlockErrorResponse,

    /**
     * The AddBlockResponse model constructor.
     * @property {module:model/AddBlockResponse}
     */
    AddBlockResponse,

    /**
     * The BalanceResponse model constructor.
     * @property {module:model/BalanceResponse}
     */
    BalanceResponse,

    /**
     * The Block model constructor.
     * @property {module:model/Block}
     */
    Block,

    /**
     * The BuyDefaultPackageSchemaResponse model constructor.
     * @property {module:model/BuyDefaultPackageSchemaResponse}
     */
    BuyDefaultPackageSchemaResponse,

    /**
     * The CardPack model constructor.
     * @property {module:model/CardPack}
     */
    CardPack,

    /**
     * The CardResponse model constructor.
     * @property {module:model/CardResponse}
     */
    CardResponse,

    /**
     * The CardsResponse model constructor.
     * @property {module:model/CardsResponse}
     */
    CardsResponse,

    /**
     * The ChangePasswordBody model constructor.
     * @property {module:model/ChangePasswordBody}
     */
    ChangePasswordBody,

    /**
     * The LoginBody model constructor.
     * @property {module:model/LoginBody}
     */
    LoginBody,

    /**
     * The LoginErrorResponse model constructor.
     * @property {module:model/LoginErrorResponse}
     */
    LoginErrorResponse,

    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse,

    /**
     * The Pokemoncard model constructor.
     * @property {module:model/Pokemoncard}
     */
    Pokemoncard,

    /**
     * The RegisterBody model constructor.
     * @property {module:model/RegisterBody}
     */
    RegisterBody,

    /**
     * The RegisterErrorResponse model constructor.
     * @property {module:model/RegisterErrorResponse}
     */
    RegisterErrorResponse,

    /**
     * The RegisterResponse model constructor.
     * @property {module:model/RegisterResponse}
     */
    RegisterResponse,

    /**
     * The TheAbilitySchema model constructor.
     * @property {module:model/TheAbilitySchema}
     */
    TheAbilitySchema,

    /**
     * The TheItemsSchema model constructor.
     * @property {module:model/TheItemsSchema}
     */
    TheItemsSchema,

    /**
     * The TheItemsSchema1 model constructor.
     * @property {module:model/TheItemsSchema1}
     */
    TheItemsSchema1,

    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction,

    /**
     * The UnauthorizedError model constructor.
     * @property {module:model/UnauthorizedError}
     */
    UnauthorizedError,

    /**
     * The UnexpectedError model constructor.
     * @property {module:model/UnexpectedError}
     */
    UnexpectedError,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserCard model constructor.
     * @property {module:model/UserCard}
     */
    UserCard,

    /**
    * The BlockchainApi service constructor.
    * @property {module:api/BlockchainApi}
    */
    BlockchainApi,

    /**
    * The CardsApi service constructor.
    * @property {module:api/CardsApi}
    */
    CardsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The ViewsApi service constructor.
    * @property {module:api/ViewsApi}
    */
    ViewsApi,

    /**
    * The WalletApi service constructor.
    * @property {module:api/WalletApi}
    */
    WalletApi
};
